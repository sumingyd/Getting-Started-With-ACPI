(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{294:function(t,e,a){t.exports=a.p+"assets/img/devicemanager.770a10fc.png"},295:function(t,e,a){t.exports=a.p+"assets/img/ssdt-before.f71c9e04.png"},296:function(t,e,a){t.exports=a.p+"assets/img/ssdt-after.28584bc4.png"},349:function(t,e,a){"use strict";a.r(e);var s=a(10),r=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"固定背光灯-手动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#固定背光灯-手动"}},[t._v("#")]),t._v(" 固定背光灯：手动")]),t._v(" "),e("h2",{attrs:{id:"寻找acpi路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#寻找acpi路径"}},[t._v("#")]),t._v(" 寻找ACPI路径")]),t._v(" "),e("h3",{attrs:{id:"在macos上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在macos上"}},[t._v("#")]),t._v(" 在MacOS上")]),t._v(" "),e("p",[t._v("不幸的是，目前还没有这方面的指导。在Linux或Windows上试试。")]),t._v(" "),e("h3",{attrs:{id:"在linux上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在linux上"}},[t._v("#")]),t._v(" 在Linux上")]),t._v(" "),e("p",[t._v("这些步骤在Ubuntu上有效，也可能在其他发行版上有效。如果没有，请尝试在Windows上进行操作。\n使用"),e("code",[t._v("lspci")]),t._v("命令来获取你的显示适配器的PCI识别号。\n这里的输出在你的系统上将是不同的!")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# lspci -D\n0000:00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)\n0000:00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]\n0000:00:01.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)\n0000:00:02.0 VGA compatible controller: VMware SVGA II Adapter\n0000:00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)\n0000:00:04.0 System peripheral: InnoTek Systemberatung GmbH VirtualBox Guest Service\n")])])]),e("p",[t._v("在输出中搜索一个看起来像你的显示适配器的条目。例如：在这个例子中，我们有"),e("code",[t._v("VGA compatible controller")]),t._v("，PCI编号为"),e("code",[t._v("0000:00:02.0")]),t._v("。这个数字的格式是"),e("code",[t._v("domain:bus:device:function")]),t._v(".")]),t._v(" "),e("p",[t._v("现在在终端使用这个命令来找到你的显示适配器的ACPI路径\n"),e("code",[t._v("# cat /sys/class/pci_bus/<domain:bus>/device/<domain:bus:device:function>/firmware_node/path")])]),t._v(" "),e("p",[t._v("比如说")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# cat /sys/class/pci_bus/0000:00/device/0000:00:02.0/firmware_node/path\n\\_SB_.PCI0.GFX0  <-- The ACPI path\n")])])]),e("p",[t._v("进一步的细节"),e("a",{attrs:{href:"https://unix.stackexchange.com/questions/653143/how-to-get-bios-device-name-from-linux-same-as-windows-device-manager-format",target:"_blank",rel:"noopener noreferrer"}},[t._v("在此链接。"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"在windows上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在windows上"}},[t._v("#")]),t._v(" 在Windows上")]),t._v(" "),e("p",[t._v("打开设别管理器，并前往以下地点：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("设备管理器 -> 显示适配器 -> 属性 -> 详细信息 > BIOS设备名称\n")])])]),e("p",[e("img",{attrs:{src:a(294),alt:"Credit to 1Revenger1 for the image"}})]),t._v(" "),e("p",[t._v("从上面的例子中，我们可以看到我们的显示器被连接到了"),e("code",[t._v("_SB.PCI0.GFX0")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"对样本ssdt的编辑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对样本ssdt的编辑"}},[t._v("#")]),t._v(" 对样本SSDT的编辑")]),t._v(" "),e("p",[t._v("现在我们有了ACPI路径，让我们的SSDT开始工作吧：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-PNLF.dsl",target:"_blank",rel:"noopener noreferrer"}},[t._v("SSDT-PNLF.dsl"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("默认情况下，这使用了"),e("code",[t._v("_SB.PCI0.GFX0")]),t._v("的路径设置。你要相应地重命名。在这个例子中，我们将假设你的路径是"),e("code",[t._v("\\_SB.PCI0.GPU0")]),t._v("。")]),t._v(" "),e("p",[e("strong",[t._v("之前")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("External (_SB_.PCI0.GFX0, DeviceObj) <- 重命名这个\n\nScope (_SB.PCI0.GFX0) <- 重命名这个\n\nDevice(_SB.PCI0.GFX0.PNLF) <- 重命名这个\n")])])]),e("p",[e("img",{attrs:{src:a(295),alt:""}})]),t._v(" "),e("p",[t._v("按照我们发现的示例路径，SSDT应该看起来像这样：")]),t._v(" "),e("p",[e("strong",[t._v("之后")]),t._v(":")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("External (_SB_.PCI0.GPU0, DeviceObj) <- 重命名\n\nScope (_SB.PCI0.GPU0) <- 重命名\n\nDevice(_SB.PCI0.GPU0.PNLF) <- 重命名\n")])])]),e("p",[e("img",{attrs:{src:a(296),alt:""}})]),t._v(" "),e("h2",{attrs:{id:"编译ssdt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译ssdt"}},[t._v("#")]),t._v(" 编译SSDT")]),t._v(" "),e("p",[t._v("随着SSDT的完成，你现在"),e("RouterLink",{attrs:{to:"/Manual/compile.html"}},[t._v("准备编译SSDT！")])],1),t._v(" "),e("h2",{attrs:{id:"收尾工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#收尾工作"}},[t._v("#")]),t._v(" 收尾工作")]),t._v(" "),e("p",[t._v("一旦你完成了你的SSDT，可以前往下一页来完成其余的SSDT，如果你准备好了，可以前往这里。")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/cleanup.html"}},[e("strong",[t._v("清理工作")])])],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);