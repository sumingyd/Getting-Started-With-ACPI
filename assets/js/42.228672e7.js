(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{372:function(t,s,i){"use strict";i.r(s);var a=i(10),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"修复imei-ssdt-imei"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修复imei-ssdt-imei"}},[t._v("#")]),t._v(" 修复IMEI (SSDT-IMEI)")]),t._v(" "),s("h2",{attrs:{id:"这个ssdt的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#这个ssdt的作用是什么"}},[t._v("#")]),t._v(" 这个SSDT的作用是什么")]),t._v(" "),s("p",[t._v("SSDT-IMEI的目的是：")]),t._v(" "),s("ul",[s("li",[t._v("当Ivy Bridge CPU与6系列主板混合使用时，我们会遇到一个问题，即IMEI设备与macOS不兼容。具体来说，设备ID不会被识别，这是一个非常重要的问题，因为macOS的iGPU驱动程序依赖于IMEI设备。\n"),s("ul",[s("li",[t._v("当Sandy Bridge CPU与7系列主板混合使用时也是如此。")])])]),t._v(" "),s("li",[t._v("一个可能出现的额外问题是，IMEI不会出现在ACPI中，这可能导致更多的问题，因为macOS希望有一个ACPI设备来应用设备ID。因此，为了解决这个问题，我们要验证我们是否有一个IMEI设备，如果没有，就创建一个新的设备。")])]),t._v(" "),s("h2",{attrs:{id:"使这个ssdt的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使这个ssdt的方法"}},[t._v("#")]),t._v(" 使这个SSDT的方法")]),t._v(" "),s("p",[t._v("对于IMEI的修复，有2种方法可以选择。")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/Universal/imei-methods/prebuilt.html"}},[t._v("预构建")]),t._v(" "),s("ul",[s("li",[t._v("预建的方法有点臃肿。建议使用下面的方法")])])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/Universal/imei-methods/manual.html"}},[t._v("手动")])],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);